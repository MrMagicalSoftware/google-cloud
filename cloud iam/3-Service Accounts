# Service Accounts

Un **service account** in Google Cloud è un tipo speciale di account utilizzato dalle applicazioni o dai servizi per eseguire operazioni all'interno di Google Cloud.
A differenza degli **utenti** che interagiscono direttamente con il sistema tramite le proprie credenziali, i **service account** sono associati a processi o applicazioni che devono 
accedere a risorse specifiche nel cloud senza l'intervento diretto di un utente.

I **service account** sono ampiamente utilizzati per automatizzare processi, gestire accessi alle risorse e implementare applicazioni in modo sicuro. Sono associati a ruoli e permessi tramite **policy IAM**.
I **service account** sono strumenti cruciali per l'automazione e la gestione sicura dei permessi nelle applicazioni in Google Cloud. 

---

### **1. Cos'è un Service Account?**

Un **service account** è un'entità di Google Cloud che rappresenta un'applicazione, un servizio o un processo. Viene utilizzato per:
- Accedere a risorse Google Cloud in nome di un'applicazione.
- Eseguire operazioni come lettura, scrittura, o configurazione di risorse Google Cloud.

Ogni service account ha una **chiave privata** che consente all'applicazione di **autenticarsi** e **autorizzarsi** per eseguire le operazioni specifiche.

---

### **2. Tipi di Service Accounts**

Esistono due principali tipi di service account:

- **Service Account predefiniti**: Ogni progetto Google Cloud viene automaticamente fornito con alcuni service account predefiniti, come `Compute Engine default service account`
che è utilizzato dalle istanze di VM di Compute Engine per accedere alle risorse.
  
- **Service Account personalizzati**: si possono creare service account personalizzati per applicazioni, servizi o task specifici, associando loro i permessi necessari.

---

### **3. Come Creare un Service Account**

Per creare un **service account** utilizzando la **Console Google Cloud**, la **gcloud CLI**, o l'**API IAM**.

#### **Creazione tramite Console Google Cloud**
1. Vai alla Console Google Cloud.
2. Naviga su **IAM & Admin > Service Accounts**.
3. Clicca su **Create Service Account**.
4. Inserisci un nome e una descrizione per il service account.
5. Assegna i **ruoli** necessari (puoi scegliere ruoli predefiniti o personalizzati).
6. Clicca su **Done** per completare la creazione.

#### **Creazione tramite gcloud CLI**
Per creare un service account utilizzando `gcloud`:

```bash
gcloud iam service-accounts create <SERVICE_ACCOUNT_NAME> \
    --description="Descrizione del service account" \
    --display-name="Nome Visualizzato"
```

#### **Creazione di un Service Account con ruoli**
si può anche associare un ruolo direttamente al service account durante la creazione:

```bash
gcloud iam service-accounts create <SERVICE_ACCOUNT_NAME> \
    --description="Service account per applicazione" \
    --display-name="Service Account App" \
    --roles="roles/storage.objectViewer"
```

---

### **4. Chiavi del Service Account**

Un **service account** può essere associato a **chiavi private** che vengono utilizzate per autenticare l'applicazione che utilizza il service account. Esistono due tipi di chiavi:

- **Chiave JSON**: Questo è il formato più comune. Contiene tutte le informazioni necessarie per l'autenticazione e la connessione alle API di Google Cloud.
- **Chiave P12**: Un formato meno comune e meno raccomandato, utilizzato principalmente per applicazioni legacy.

#### **Generazione della Chiave per un Service Account**
Per generare una chiave JSON per un service account:

1. Vai a **IAM & Admin > Service Accounts** nella Console Google Cloud.
2. Seleziona il service account per il quale desideri generare una chiave.
3. Vai alla sezione **Keys** e clicca su **Add Key > Create New Key**.
4. Seleziona **JSON** come formato della chiave.
5. Clicca su **Create** e salva il file JSON in un luogo sicuro.

In alternativa, usando **gcloud CLI**:

```bash
gcloud iam service-accounts keys create <KEY_FILE>.json \
    --iam-account=<SERVICE_ACCOUNT_NAME>@<PROJECT_ID>.iam.gserviceaccount.com
```

---

### **5. Assegnare Ruoli e Permessi a un Service Account**

I service account devono essere associati a **ruoli IAM** che determinano i permessi che il service account ha nelle risorse di Google Cloud. I ruoli possono essere:
- **Ruoli predefiniti**: `roles/storage.objectViewer`, `roles/editor`, ecc.
- **Ruoli personalizzati**: Ruoli definiti con permessi specifici su risorse personalizzate.

#### **Assegnare Ruoli a un Service Account**
Si può assegnare un ruolo a un service account tramite la Console Google Cloud o tramite `gcloud`.

**Esempio tramite gcloud**:

```bash
gcloud projects add-iam-policy-binding <PROJECT_ID> \
    --member="serviceAccount:<SERVICE_ACCOUNT_NAME>@<PROJECT_ID>.iam.gserviceaccount.com" \
    --role="roles/storage.objectViewer"
```

---

### **6. Uso dei Service Account nelle Applicazioni**

Un service account viene utilizzato dalle applicazioni per autenticarsi e interagire con le risorse di Google Cloud. 
L'applicazione può utilizzare la chiave privata del service account per autenticarsi tramite la libreria client di Google Cloud.

#### **Autenticazione con una chiave JSON**

Ecco un esempio in Python di come autenticarsi utilizzando un service account:

```python
from google.oauth2 import service_account
from google.cloud import storage

# Carica la chiave JSON del service account
credentials = service_account.Credentials.from_service_account_file(
    'path/to/service-account-key.json'
)

# Crea un client per Cloud Storage
client = storage.Client(credentials=credentials, project='your-project-id')

# Accedi a un bucket
bucket = client.get_bucket('your-bucket-name')
```

---

### **7. Best Practices per l'Utilizzo dei Service Account**

- **Principio del privilegio minimo**: Prestare attenzione che ogni service account abbia solo i permessi necessari per eseguire le operazioni richieste. Usa **ruoli personalizzati** se necessario.
  
- **Gestione delle chiavi**: Le chiavi private dei service account sono altamente sensibili. bisogna Trattale come se fossero password, e gestiscile con molta attenzione. conviene utilizzare strumenti 
come **Secret Manager** per memorizzarle in modo sicuro.

- **Rotazione delle chiavi**: strutturare  un processo di **rotazione delle chiavi** regolare per ridurre il rischio associato a eventuali chiavi compromesse.

- **Audit**: Usa **Cloud Audit Logs** per monitorare l'accesso e l'uso dei service account, in modo da rilevare eventuali comportamenti sospetti.

---

### **8. Limitazioni dei Service Account**

- **Limiti di quota**: Ogni progetto può avere un numero massimo di service account che puoi creare (solitamente **100** per progetto).
- **Accesso ai ruoli**: I service account non possono essere utilizzati per accedere direttamente ad alcune risorse sensibili, come gli **account di amministratore** del progetto.

---

